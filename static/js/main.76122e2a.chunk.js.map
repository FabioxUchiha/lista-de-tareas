{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["initialFormValues","title","descripcion","TodoForm","addTodo","useState","formValues","setFormValues","error","setError","successMesage","setSuccessMesage","handleChangeInput","e","changeFormValues","target","name","value","className","onSubmit","preventDefault","trim","setTimeout","type","placeholder","onChange","Todo","todo","todoDelete","todoToggleCompleted","onClick","id","completed","TodoList","todos","map","initialState","App","setTodos","todoId","changeTodo","filter","Date","now","divRoot","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.76122e2a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst initialFormValues = {\n  title: \"\",\n  descripcion: \"\",\n};\n\nconst TodoForm = ({ addTodo }) => {\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [error, setError] = useState(null);\n  const [successMesage, setSuccessMesage] = useState(null);\n\n  const { title, descripcion } = formValues;\n\n  const handleChangeInput = (e) => {\n    const changeFormValues = {\n      ...formValues,\n      [e.target.name]: e.target.value,\n    };\n    setFormValues(changeFormValues);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (title.trim() === \"\") {\n      setError(\"Debes agregar un titulo\");\n      setTimeout(() => {\n        setError(null);\n      }, 2000);\n      return;\n    } else if (descripcion.trim() === \"\") {\n      setError(\"Debes agregar una descripción\");\n      setTimeout(() => {\n        setError(null);\n      }, 2000);\n      return;\n    }\n    addTodo(formValues);\n    setFormValues(initialFormValues);\n    setSuccessMesage(\"Tarea agregada con exito\");\n    setError(null);\n    setTimeout(() => {\n      setSuccessMesage(null);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"col-4\">\n      <h1>Nueva tarea</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control shadow\"\n            placeholder=\"Título...\"\n            name=\"title\"\n            value={title}\n            onChange={handleChangeInput}\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"Descripción...\"\n            className=\"form-control shadow\"\n            name=\"descripcion\"\n            value={descripcion}\n            onChange={handleChangeInput}\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary btn-block\">Agregar tarea</button>\n      </form>\n      {error && <div className=\"alert alert-danger mt-2\">{error}</div>}\n      {successMesage && (\n        <div className=\"alert alert-primary mt-2\">{successMesage}</div>\n      )}\n    </div>\n  );\n};\n\nexport default TodoForm;\n","import React from \"react\";\n\nconst Todo = ({ todo, todoDelete, todoToggleCompleted }) => {\n  return (\n    <div className=\"card mt-2 shadow\">\n      <div className=\"card-body\">\n        <h3 className=\"card-title text-right\">\n          {todo.title}\n          <button\n            onClick={() => todoToggleCompleted(todo.id)}\n            className={`btn  btn-sm ${\n              todo.completed ? \"btn-outline-success\" : \"btn-success\"\n            } ml-2`}\n          >\n            {todo.completed ? \"Terminado\" : \"Terminar\"}\n          </button>\n        </h3>\n        <p className=\"card-text text-right\">{todo.descripcion}</p>\n        <hr />\n        <div className=\"d-flex justify-content-end\">\n          <button className=\"btn btn-outline-primary btn-sm mr-2\">\n            Editar\n          </button>\n          <button\n            className=\"btn btn-outline-danger btn-sm\"\n            onClick={() => todoDelete(todo.id)}\n          >\n            Eliminar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n","import Todo from \"./Todo\";\n\nconst TodoList = ({ todos, todoDelete, todoToggleCompleted }) => {\n  return (\n    <div className=\"col-8\">\n      <h1 className=\"text-right\">Lista de tareas</h1>\n      {todos.map((todo) => (\n        <Todo\n          todo={todo}\n          key={todo.id}\n          todoDelete={todoDelete}\n          todoToggleCompleted={todoToggleCompleted}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import { useState } from \"react\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nimport \"./App.css\";\n\nconst initialState = [\n  {\n    id: 1,\n    title: \"Todo #1\",\n    descripcion: \"desc del todo#1\",\n    completed: false,\n  },\n  {\n    id: 2,\n    title: \"Todo #2\",\n    descripcion: \"desc del todo#2\",\n    completed: true,\n  },\n];\n\nexport default function App() {\n  const [todos, setTodos] = useState(initialState);\n\n  const todoDelete = (todoId) => {\n    const changeTodo = todos.filter((todo) => todo.id !== todoId);\n    setTodos(changeTodo);\n  };\n\n  const todoToggleCompleted = (todoId) => {\n    const changeTodo = todos.map((todo) =>\n      todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n    );\n    setTodos(changeTodo);\n  };\n\n  const addTodo = (todo) => {\n    const newTodo = {\n      ...todo,\n      id: Date.now(),\n      completed: false,\n    };\n    const changeTodo = [newTodo, ...todos];\n\n    setTodos(changeTodo);\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"row\">\n        <TodoList\n          todos={todos}\n          todoDelete={todoDelete}\n          todoToggleCompleted={todoToggleCompleted}\n        />\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst divRoot = document.getElementById(\"root\");\nReactDOM.render(<App />, divRoot);\n"],"sourceRoot":""}