{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["initialFormValues","title","descripcion","TodoForm","addTodo","todoEdit","todoUpdate","setTodoEdit","useState","formValues","setFormValues","error","setError","successMesage","setSuccessMesage","useEffect","handleChangeInput","e","changeFormValues","target","name","value","className","onClick","onSubmit","preventDefault","trim","setTimeout","type","placeholder","onChange","Todo","todo","todoDelete","todoToggleCompleted","id","completed","TodoList","todos","length","map","initialState","localTodos","JSON","parse","localStorage","getItem","App","setTodos","setItem","stringify","todoId","changeTodo","filter","Date","now","divRoot","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d60213b4.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst initialFormValues = {\n  title: \"\",\n  descripcion: \"\",\n};\n\nconst TodoForm = ({ addTodo, todoEdit, todoUpdate, setTodoEdit }) => {\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [error, setError] = useState(null);\n  const [successMesage, setSuccessMesage] = useState(null);\n\n  useEffect(() => {\n    if (todoEdit) {\n      setFormValues(todoEdit);\n    } else {\n      setFormValues(initialFormValues);\n    }\n  }, [todoEdit]);\n\n  const { title, descripcion } = formValues;\n\n  const handleChangeInput = (e) => {\n    const changeFormValues = {\n      ...formValues,\n      [e.target.name]: e.target.value,\n    };\n    setFormValues(changeFormValues);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (title.trim() === \"\") {\n      setError(\"Debes agregar un titulo\");\n      setTimeout(() => {\n        setError(null);\n      }, 2000);\n      return;\n    } else if (descripcion.trim() === \"\") {\n      setError(\"Debes agregar una descripción\");\n      setTimeout(() => {\n        setError(null);\n      }, 2000);\n      return;\n    }\n    if (todoEdit) {\n      todoUpdate(formValues);\n      setSuccessMesage(\"Tarea actualizada con exito\");\n    } else {\n      addTodo(formValues);\n      setSuccessMesage(\"Tarea agregada con exito\");\n      setFormValues(initialFormValues);\n    }\n    setError(null);\n    setTimeout(() => {\n      setSuccessMesage(null);\n    }, 2000);\n  };\n\n  const cancelEdit = () => {\n    setFormValues(initialFormValues);\n    setTodoEdit(null);\n  };\n\n  return (\n    <div className=\"col-4\">\n      <h1>{todoEdit ? \"Editar tarea\" : \"Nueva tarea\"}</h1>\n      {todoEdit && (\n        <button onClick={cancelEdit} className=\"btn btn-warning mb-3\">\n          Cancelar edicion\n        </button>\n      )}\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control shadow\"\n            placeholder=\"Título...\"\n            name=\"title\"\n            value={title}\n            onChange={handleChangeInput}\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"Descripción...\"\n            className=\"form-control shadow\"\n            name=\"descripcion\"\n            value={descripcion}\n            onChange={handleChangeInput}\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary btn-block\">\n          {todoEdit ? \"Actualizar tarea\" : \"Agregar tarea\"}\n        </button>\n      </form>\n      {error && <div className=\"alert alert-danger mt-2\">{error}</div>}\n      {successMesage && (\n        <div className=\"alert alert-primary mt-2\">{successMesage}</div>\n      )}\n    </div>\n  );\n};\n\nexport default TodoForm;\n","import React from \"react\";\n\nconst Todo = ({ todo, todoDelete, todoToggleCompleted, setTodoEdit }) => {\n  return (\n    <div className=\"card mt-2 shadow\">\n      <div className=\"card-body\">\n        <h3 className=\"card-title text-right\">\n          {todo.title}\n          <button\n            onClick={() => todoToggleCompleted(todo.id)}\n            className={`btn  btn-sm ${\n              todo.completed ? \"btn-outline-success\" : \"btn-success\"\n            } ml-2`}\n          >\n            {todo.completed ? \"Terminado\" : \"Terminar\"}\n          </button>\n        </h3>\n        <p className=\"card-text text-right\">{todo.descripcion}</p>\n        <hr />\n        <div className=\"d-flex justify-content-end\">\n          <button\n            className=\"btn btn-outline-primary btn-sm mr-2\"\n            onClick={() => {\n              setTodoEdit(todo);\n            }}\n          >\n            Editar\n          </button>\n          <button\n            className=\"btn btn-outline-danger btn-sm\"\n            onClick={() => todoDelete(todo.id)}\n          >\n            Eliminar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n","import Todo from \"./Todo\";\n\nconst TodoList = ({ todos, todoDelete, todoToggleCompleted, setTodoEdit }) => {\n  return (\n    <div className=\"col-8\">\n      <h1 className=\"text-right\">Lista de tareas</h1>\n      {todos.length === 0 ? (\n        <div className=\"alert alert-primary\">Agrega alguna tarea</div>\n      ) : (\n        todos.map((todo) => (\n          <Todo\n            todo={todo}\n            key={todo.id}\n            todoDelete={todoDelete}\n            todoToggleCompleted={todoToggleCompleted}\n            setTodoEdit={setTodoEdit}\n          />\n        ))\n      )}\n      {}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import { useState, useEffect } from \"react\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nimport \"./App.css\";\n\nconst initialState = [\n  {\n    id: 1,\n    title: \"Todo #1 Ejemplo\",\n    descripcion: \"descripción de la tarea #1 de ejemplo\",\n    completed: false,\n  },\n];\n\nconst localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n\nexport default function App() {\n  const [todos, setTodos] = useState(localTodos || initialState);\n  const [todoEdit, setTodoEdit] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  // eliminar tarea\n  const todoDelete = (todoId) => {\n    if (todoEdit && todoId === todoEdit.id) {\n      setTodoEdit(null);\n    }\n    const changeTodo = todos.filter((todo) => todo.id !== todoId);\n    setTodos(changeTodo);\n  };\n\n  // Cambiar boton de terminar tarea\n  const todoToggleCompleted = (todoId) => {\n    const changeTodo = todos.map((todo) =>\n      todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\n    );\n    setTodos(changeTodo);\n  };\n\n  const todoUpdate = (todoEdit) => {\n    const changeTodo = todos.map((todo) =>\n      todo.id === todoEdit.id ? todoEdit : todo\n    );\n    setTodos(changeTodo);\n  };\n\n  // agregar nueva tarea\n  const addTodo = (todo) => {\n    const newTodo = {\n      ...todo,\n      id: Date.now(),\n      completed: false,\n    };\n    const changeTodo = [newTodo, ...todos];\n\n    setTodos(changeTodo);\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"row\">\n        <TodoList\n          todos={todos}\n          todoDelete={todoDelete}\n          todoToggleCompleted={todoToggleCompleted}\n          setTodoEdit={setTodoEdit}\n        />\n        <TodoForm\n          addTodo={addTodo}\n          todoEdit={todoEdit}\n          todoUpdate={todoUpdate}\n          setTodoEdit={setTodoEdit}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst divRoot = document.getElementById(\"root\");\nReactDOM.render(<App />, divRoot);\n"],"sourceRoot":""}